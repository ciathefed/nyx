.section text
; print_string(q0: i64) -> void
; Prints a null terminated string
print_string:
    push q0
    push q1
    push q2
    push q15

    push q0
    call strlen
    mov q2, q0
    mov q0, STDOUT
    pop q1
    mov q15, SYS_WRITE
    syscall

    pop q15
    pop q2
    pop q1
    pop q0
    ret


.section text
; print_number(q0: i64) -> void
; Converts a signed 64-bit integer to string and prints it
print_number:
    push q10
    push q11
    push q12
    push q13
    push q14
    push q15

    sub sp, sp, 24
    mov q10, sp
    add q11, sp, 23

    sti byte 0, [q11]
    sub q11, q11, 1

    mov q12, q0
    mov q13, 0

    cmp q12, 0
    jge print_number_convert

    mov q13, 1
    mov q15, 0
    sub q12, q15, q12

print_number_convert:
    mov q14, 10

print_number_loop:
    mov q0, q12
    mov q1, 0

print_number_divide:
    cmp q0, q14
    jle print_number_divide_done
    sub q0, q0, q14
    add q1, q1, 1
    jmp print_number_divide

print_number_divide_done:
    add q0, q0, 48
    str b0, [q11]
    sub q11, q11, 1

    mov q12, q1
    cmp q12, 0
    jne print_number_loop

    cmp q13, 1
    jne print_number_output
    sti byte 45, [q11]
    sub q11, q11, 1

print_number_output:
    add q0, q11, 1
    call print_string

    add sp, sp, 24
    pop q15
    pop q14
    pop q13
    pop q12
    pop q11
    pop q10
    ret
